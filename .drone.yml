kind: pipeline
type: docker
name: frontend

steps:
- name: build
  image: plugins/docker
  settings:
    registry: 
      from_secret: docker-registry
    username: 
      from_secret: docker-username
    password: 
      from_secret: docker-password
    repo: 
      from_secret: docker-repo-fe
    tags: latest
    dry_run: false
    purge: true
    context: ./FE
    dockerfile: ./FE/Dockerfile

trigger:
  event:
  - custom
  - push
  - pull_request

---

kind: pipeline
type: docker
name: backend

steps:
- name: pre-build
  image: alpine
  environment:
    APPSETTINGS:
      from_secret: appsettings
  commands:
    - cd ./BE/NUNO-Backend
    - echo $${APPSETTINGS} > appsettings.json

- name: build
  image: plugins/docker
  settings:
    registry: 
      from_secret: docker-registry
    username: 
      from_secret: docker-username
    password: 
      from_secret: docker-password
    repo: 
      from_secret: docker-repo-be
    tags: latest
    dry_run: false
    purge: true
    context: ./BE
    dockerfile: ./BE/Dockerfile

trigger:
  event:
  - custom
  - push
  - pull_request

---

kind: pipeline
type: docker
name: notify

steps:
- name: discord notification
  image: appleboy/drone-discord
  settings:
    webhook_id: 
      from_secret: discord-webhook-id
    webhook_token: 
      from_secret: discord-webhook-token

depends_on:
  - frontend
  - backend

trigger:
  event:
  - push
  - pull_request

---

kind: pipeline
type: docker
name: after

steps:
  - name: deploy-to-server
    image: plugins/webhook
    settings:
      urls:
        from_secret: webhook

trigger:
  event:
  - promote
  target:
  - production